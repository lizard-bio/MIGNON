include required(classpath("application"))
# Cromwell "system" settings
system {
#  # If 'true', a SIGINT will trigger Cromwell to attempt to abort all currently running jobs before exiting
   abort-jobs-on-terminate = true
#
#  # If 'true' then when Cromwell starts up, it tries to restart incomplete workflows
   workflow-restart = true
#
#  # Cromwell will cap the number of running workflows at N
   max-concurrent-workflows = 100
#
#  # Cromwell will launch up to N submitted workflows at a time, regardless of how many open workflow slots exist
   max-workflow-launch-count = 250
#
#  # Number of seconds between workflow launches
   new-workflow-poll-rate = 30
#
#  # Since the WorkflowLogCopyRouter is initialized in code, this is the number of workers
   number-of-workflow-log-copy-workers = 8
#
#  # Default number of cache read workers
   number-of-cache-read-workers = 8

   file-hash-cache = true
 
#
#  abort {
#    # These are the default values in Cromwell, in most circumstances there should not be a need to change them.
#
#    # How frequently Cromwell should scan for aborts.
#    scan-frequency: 10 seconds
#
#    # The cache of in-progress aborts. Cromwell will add entries to this cache once a WorkflowActor has been messaged to abort.
#    # If on the next scan an 'Aborting' status is found for a workflow that has an entry in this cache, Cromwell will not ask
#    # the associated WorkflowActor to abort again.
#    cache {
#      enabled: true
#      # Guava cache concurrency.
#      concurrency: 1
#      # How long entries in the cache should live from the time they are added to the cache.
#      ttl: 20 minutes
#      # Maximum number of entries in the cache.
#      size: 100000
#    }
#  }
}
workflow-options {
#  # Directory where to write per workflow logs
   workflow-log-dir: "cromwell-workflow-logs"
#
#  # When true, per workflow logs will be deleted after copying
   workflow-log-temporary: true
#
#  # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.
#  # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:
   workflow-failure-mode: "ContinueWhilePossible"
#
   default {
#    # When a workflow type is not provided on workflow submission, this specifies the default type.
     workflow-type: WDL
#

#    # When a workflow type version is not provided on workflow submission, this specifies the default type version.
#    #workflow-type-version: "draft-2"
#
#    # To set a default hog group rather than defaulting to workflow ID:
#    #hogGroup: "static"
  }
}

aws {

  application-name = "cromwell"
  auths = [
    {
      name = "default"
      scheme = "default"
    }
  ]
  region = "us-east-1"
}

engine {
  filesystems {
    s3.auth = "default"
  }
}

backend {
  default = "AWSBatch"
  providers {
    AWSBatch {
      actor-factory = "cromwell.backend.impl.aws.AwsBatchBackendLifecycleActorFactory"
      config {

        numSubmitAttempts = 6
        numCreateDefinitionAttempts = 6

        // Base bucket for workflow executions

        root = "s3://2pcdx/mignon/cromwell-runDir"

        // A reference to an auth defined in the `aws` stanza at the top.  This auth is used to create
        // Jobs and manipulate auth JSONs.
        auth = "default"

        default-runtime-attributes {
          queueArn = "arn:aws:batch:us-east-1:580035673108:job-queue/default-immbio", scriptBucketName = "2pcdx"
        }

        filesystems {
          s3 {
            // A reference to a potentially different auth for manipulating files via engine functions.
            auth = "default"
	    #duplication-strategy: [
	    #  "hard-link", "soft-link", "copy"
 	    #]
          }
        }
      }
    }
  }
}

database {
  profile = "slick.jdbc.HsqldbProfile$"
  db {
    driver = "org.hsqldb.jdbcDriver"
    url = """
    jdbc:hsqldb:file:cromwell-executions/cromwell-db/cromwell-db;
    shutdown=false;
    hsqldb.default_table_type=cached;hsqldb.tx=mvcc;
    hsqldb.result_max_memory_rows=100000;
    hsqldb.large_data=true;
    hsqldb.applog=1;
    hsqldb.log_compressed=true;
    hsqldb.script_format=3
    """

    connectionTimeout = 240000
    numThreads = 2
   }
}

call-caching {
  enabled = true
}
